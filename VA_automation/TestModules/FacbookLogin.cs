///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace VA_automation.TestModules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FacbookLogin recording.
    /// </summary>
    [TestModule("9bb4510b-e8b8-4b1f-b03d-81c73a881a3f", ModuleType.Recording, 1)]
    public partial class FacbookLogin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::VA_automation.VA_automationRepository repository.
        /// </summary>
        public static global::VA_automation.VA_automationRepository repo = global::VA_automation.VA_automationRepository.Instance;

        static FacbookLogin instance = new FacbookLogin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FacbookLogin()
        {
            DOM = "";
            UserName = "";
            Password = "";
            Loginvalidation = "";
            LoginExpectedName = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FacbookLogin Instance
        {
            get { return instance; }
        }

#region Variables

        string _DOM;

        /// <summary>
        /// Gets or sets the value of variable DOM.
        /// </summary>
        [TestVariable("a060790f-ad86-4fc3-b80a-71c910713a09")]
        public string DOM
        {
            get { return _DOM; }
            set { _DOM = value; }
        }

        string _UserName;

        /// <summary>
        /// Gets or sets the value of variable UserName.
        /// </summary>
        [TestVariable("7ed07d53-7377-4f2e-8003-9ec9d20560d3")]
        public string UserName
        {
            get { return _UserName; }
            set { _UserName = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("20f8dd0d-f306-4d12-bfdd-4a4fa09ab332")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

        string _Loginvalidation;

        /// <summary>
        /// Gets or sets the value of variable Loginvalidation.
        /// </summary>
        [TestVariable("1b7191cd-be4c-434c-b2ad-762ebc26fd1d")]
        public string Loginvalidation
        {
            get { return _Loginvalidation; }
            set { _Loginvalidation = value; }
        }

        string _LoginExpectedName;

        /// <summary>
        /// Gets or sets the value of variable LoginExpectedName.
        /// </summary>
        [TestVariable("0709d18a-b362-4711-9258-b3cb45cd6724")]
        public string LoginExpectedName
        {
            get { return _LoginExpectedName; }
            set { _LoginExpectedName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site URL in variable $DOM with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser(DOM, "Chrome", "", false, false, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FacebookLogInOrSignUp.EnterUsername' at Center.", repo.FacebookLogInOrSignUp.EnterUsernameInfo, new RecordItemIndex(1));
            repo.FacebookLogInOrSignUp.EnterUsername.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'FacebookLogInOrSignUp.EnterUsername'.", repo.FacebookLogInOrSignUp.EnterUsernameInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.FacebookLogInOrSignUp.EnterUsername);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$UserName' with focus on 'FacebookLogInOrSignUp.EnterUsername'.", repo.FacebookLogInOrSignUp.EnterUsernameInfo, new RecordItemIndex(3));
            repo.FacebookLogInOrSignUp.EnterUsername.PressKeys(UserName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FacebookLogInOrSignUp.EnterPassword' at Center.", repo.FacebookLogInOrSignUp.EnterPasswordInfo, new RecordItemIndex(4));
            repo.FacebookLogInOrSignUp.EnterPassword.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'FacebookLogInOrSignUp.EnterPassword'.", repo.FacebookLogInOrSignUp.EnterPasswordInfo, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.FacebookLogInOrSignUp.EnterPassword);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'FacebookLogInOrSignUp.EnterPassword'.", repo.FacebookLogInOrSignUp.EnterPasswordInfo, new RecordItemIndex(6));
            repo.FacebookLogInOrSignUp.EnterPassword.PressKeys(Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FacebookLogInOrSignUp.ClickLoginButton' at Center.", repo.FacebookLogInOrSignUp.ClickLoginButtonInfo, new RecordItemIndex(7));
            repo.FacebookLogInOrSignUp.ClickLoginButton.Click();
            Delay.Milliseconds(200);
            
            //Get_value_LoginValidation(repo.FacebookLogInOrSignUp.LoginValidationInfo);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Application", "Killing application containing item 'FacebookLogInOrSignUp.ClickLoginButton'.", repo.FacebookLogInOrSignUp.ClickLoginButtonInfo, new RecordItemIndex(9));
            Host.Current.KillApplication(repo.FacebookLogInOrSignUp.ClickLoginButton);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
